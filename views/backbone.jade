!!! 5
html(lang="en")
  head
    meta(char-set='utf-8')
    //if lt IE 9
        script(src="http://html5shim.googlecode.com/svn/trunk/html5.js")
    
    // Mobile Specific Metas
    meta(name="viewport", content="width=device-width, initial-scale=1, maximum-scale=1")
    
    link(rel="stylesheet", href="stylesheets/base.css")
    link(rel="stylesheet", href="stylesheets/skeleton.css")
    link(rel="stylesheet", href="stylesheets/layout.css")
    
    style
      .invalid { border: 1px solid #f22; }
  
    link(rel="shortcut icon", href="images/favicon.ico")
    link(rel="apple-touch-icon", href="images/apple-touch-icon.png")
    link(rel="apple-touch-icon", sizes="72x72", href="images/apple-touch-icon-72x72.png")
    link(rel="apple-touch-icon", sizes="114x114", href="images/apple-touch-icon-114x114.png")

    title= "Nag.gr/Backbone"
    
    script(src='javascripts/jquery.js')
    script(src='javascripts/underscore.js')
    script(src='javascripts/backbone.js')
    //script(src='javascripts/backbone-relational.js')
    script(src='javascripts/backbone.localStorage.js')
    script(src="javascripts/app.js")
  body
    #app.container
      .row
        h1.remove-bottom(style="margin-top: 40px")
          | Nag.gr/Backbone
          | <hr />
      .row
        #create-task.one-third.column
          label Tasks
          input#new-task(placeholder='what do you need to do?', type='text').full-width
        #create-contact-point.one-third.column
          label Contact Points
          input#new-contact-point(placeholder='Twitter, email, phone, etc', type='text').full-width
      .row
        #tasks.one-third.column
          ul#task-list
        #contact-point.one-third.column
          ul#contact-point-list

    script(src='backbone/task.js')
    script(src='backbone/contact_point.js')
    script
      $(function(){
        window.AppView = Backbone.View.extend({
          el: $("#app"),

          events: {
            "keypress #new-task": "createTaskOnEnter",
            "keypress #new-contact-point": "createContactPointOnEnter"
          },

          initialize: function() {
            _.bindAll(this, 'addTask','addAllTasks','addContactPoint','addAllContactPoints');

            this.task_input = this.$("#new-task");
            this.contact_point_input = this.$("#new-contact-point");

            tasks.bind('add', this.addTask);
            tasks.bind('reset', this.addAllTasks);
            tasks.bind('all', this.render);
            tasks.fetch();
            
            contact_points.bind('add', this.addContactPoint);
            contact_points.bind('reset', this.addAllContactPoints);
            contact_points.bind('all', this.render);
            contact_points.fetch();
          },

          addTask: function(task) {
            var view = new TaskView({model: task});
            this.$("#task-list").prepend(view.render().el);
          },

          addAllTasks: function() {
            tasks.each(this.addTask);
          },
          
          addContactPoint: function(contact_point) {
            var view = new ContactPointView({model: contact_point});
            this.$("#contact-point-list").append(view.render().el);
          },

          addAllContactPoints: function() {
            contact_points.each(this.addContactPoint);
          },

          createTaskOnEnter: function(e) {
            if(e.keyCode != 13) return;
            tasks.create({content:this.task_input.val(), order: tasks.nextOrder()});
            this.task_input.val('');
          },
          createContactPointOnEnter: function(e) {
            if(e.keyCode != 13) return;
            contact_points.create({content:this.contact_point_input.val()});
            this.contact_point_input.val('');
          }
        });

        app = new AppView;
      }());
