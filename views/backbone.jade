!!! 5
html(lang="en")
  head
    meta(char-set='utf-8')
    //if lt IE 9
        script(src="http://html5shim.googlecode.com/svn/trunk/html5.js")
    
    // Mobile Specific Metas
    meta(name="viewport", content="width=device-width, initial-scale=1, maximum-scale=1")
    
    link(rel="stylesheet", href="stylesheets/base.css")
    link(rel="stylesheet", href="stylesheets/skeleton.css")
    link(rel="stylesheet", href="stylesheets/layout.css")
    
    style
      .invalid { border: 1px solid #f22; }
  
    link(rel="shortcut icon", href="images/favicon.ico")
    link(rel="apple-touch-icon", href="images/apple-touch-icon.png")
    link(rel="apple-touch-icon", sizes="72x72", href="images/apple-touch-icon-72x72.png")
    link(rel="apple-touch-icon", sizes="114x114", href="images/apple-touch-icon-114x114.png")

    title= "Nag.gr/Backbone"
    
    script(src='javascripts/jquery.js')
    script(src='javascripts/underscore.js')
    script(src='javascripts/backbone.js')
    //script(src='javascripts/backbone-relational.js')
    script(src='javascripts/backbone.localStorage.js')
    script(src="javascripts/app.js")
  body
    #app.container
      .row
        h1.remove-bottom(style="margin-top: 40px")
          | Nag.gr/Backbone
          | <hr />
      #project.row
        .one-third.column
          label Projects
          input#new-project(placeholder='project git url', type='text')
          ul#projects
        #create-task.one-third.column
          label Tasks
          input#new-task(placeholder='what do you need to do?', type='text',style="display:none").full-width
          #tasks
            ul#task-list
        
        

    script(src='backbone/task.js')
    script
      $(function(){
        window.Project = Backbone.Model.extend({
          initialize: function() {
            _.bindAll(this, 'addTask','addAllTasks');

            this.tasks = new TaskList;

            this.tasks.bind('add', this.addTask);
            this.tasks.bind('reset', this.addAllTasks);

            this.view = new ProjectView({model: this});
            $("#projects").html(_.template("<em><%= name %></em>",this.toJSON()))
          },

          addTask: function(task) {
            var view = new TaskView({model: task});
            $("#task-list").prepend(view.render().el);
          },

          addAllTasks: function() {
            this.tasks.each(this.addTask);
          }
          
        });

        window.ProjectCollection = Backbone.Collection.extend({
          model: Project,
          localStorage: new Store('projects')
        });
      
        window.ProjectView = Backbone.View.extend({
          el: $("#project"),

          events: {
            "keypress #new-task": "createTaskOnEnter",
          },

          initialize: function() {
            _.bindAll(this, 'render');
            this.task_input = this.$("#new-task");

            this.model.tasks = this.model.tasks.map(function(task){
              return task.parent == this.model.id;
            });

          },

          createTaskOnEnter: function(e) {
            if(e.keyCode != 13) return;
            this.model.tasks.create({content:this.task_input.val(), order: this.model.tasks.nextOrder(), parent: this.model.id});
            this.task_input.val('');
            $("#new-task").css('display', 'block').attr('data-parent', this.model.id);
          }
        });
        
        
        window.ProjectManager = Backbone.View.extend({
          el: $("#app"),
          
          events: {
            "keypress input#new-project" : "createProjectOnEnter"
          },
          
          initialize: function() {
            console.log('init');
            _.bindAll(this, 'render', 'createProjectOnEnter');
          
            this.projects = new ProjectCollection;
            this.current_input = this.$("#new-project");
          },
          
          createProjectOnEnter: function(e) {
            if(e.keyCode != 13) return;
            var name_of_new_project = this.current_input.val();
            this.projects.create({name: name_of_new_project});
            this.current_input.val('');
            this.current_input.css('display', 'none');
          }
        });

        window.pm = new ProjectManager;
        
      }());
